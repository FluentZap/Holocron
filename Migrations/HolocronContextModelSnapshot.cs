// <auto-generated />
using System;
using Holocron.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Holocron.Migrations
{
    [DbContext(typeof(HolocronContext))]
    partial class HolocronContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Holocron.Context.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Career")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CharacteristicsBuyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CharacteristicsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FreeCareerRanks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FreeSpecRanks")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SkillsBuyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkillsCareer")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillsCareerFree")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillsSpec")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillsSpecFree")
                        .HasColumnType("TEXT");

                    b.Property<int>("Soak")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Specializations")
                        .HasColumnType("TEXT");

                    b.Property<string>("Species")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strain")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StrainThreshold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnusedXp")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WoundThreshold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicsBuyId");

                    b.HasIndex("CharacteristicsId");

                    b.HasIndex("SkillsBuyId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Holocron.Context.Characteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BR")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CUN")
                        .HasColumnType("INTEGER");

                    b.Property<int>("INT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PR")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WIL")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("Holocron.Context.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Holocron.Context.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Holocron.Context.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ASTRO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ATHL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BRAWL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CHARM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("COERC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("COMP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("COOL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("COORD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CORE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CYBERNETICS")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DECEP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DISC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EDU")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GUNN")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LEAD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LORE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LTSABER")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MECH")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MED")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MELEE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NEG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OUT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PERC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PILOTPL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PILOTSP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RANGHVY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RANGLT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RESIL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SKUL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("STEAL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SURV")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SW")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UND")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VIGIL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WARF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XEN")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Holocron.Context.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionToken")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Holocron.Context.Character", b =>
                {
                    b.HasOne("Holocron.Context.Characteristics", "CharacteristicsBuy")
                        .WithMany()
                        .HasForeignKey("CharacteristicsBuyId");

                    b.HasOne("Holocron.Context.Characteristics", "Characteristics")
                        .WithMany()
                        .HasForeignKey("CharacteristicsId");

                    b.HasOne("Holocron.Context.Skills", "SkillsBuy")
                        .WithMany()
                        .HasForeignKey("SkillsBuyId");

                    b.HasOne("Holocron.Context.User", null)
                        .WithMany("Characters")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Holocron.Context.Group", b =>
                {
                    b.HasOne("Holocron.Context.User", null)
                        .WithMany("Groups")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Holocron.Context.Item", b =>
                {
                    b.HasOne("Holocron.Context.Character", null)
                        .WithMany("Inventory")
                        .HasForeignKey("CharacterId");
                });
#pragma warning restore 612, 618
        }
    }
}
