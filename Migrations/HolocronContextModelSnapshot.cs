// <auto-generated />
using System;
using Holocron.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Holocron.Migrations
{
    [DbContext(typeof(HolocronContext))]
    partial class HolocronContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Holocron.Context.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Career");

                    b.Property<int?>("CharacteristicsBuyId");

                    b.Property<int?>("CharacteristicsId");

                    b.Property<int>("Credits");

                    b.Property<int>("FreeCareerRanks");

                    b.Property<int>("FreeSpecRanks");

                    b.Property<string>("Name");

                    b.Property<int?>("SkillsBuyId");

                    b.Property<string>("SkillsCareer");

                    b.Property<string>("SkillsCareerFree");

                    b.Property<string>("SkillsSpec");

                    b.Property<string>("SkillsSpecFree");

                    b.Property<int>("Soak");

                    b.Property<string>("Specializations");

                    b.Property<string>("Species");

                    b.Property<int>("Strain");

                    b.Property<int>("StrainThreshold");

                    b.Property<int>("UnusedXp");

                    b.Property<int?>("UserId");

                    b.Property<int>("Wound");

                    b.Property<int>("WoundThreshold");

                    b.Property<int>("Xp");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicsBuyId");

                    b.HasIndex("CharacteristicsId");

                    b.HasIndex("SkillsBuyId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Holocron.Context.CharacterInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterId");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterInventory");
                });

            modelBuilder.Entity("Holocron.Context.CharacterShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterShip");
                });

            modelBuilder.Entity("Holocron.Context.Characteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AG");

                    b.Property<int>("BR");

                    b.Property<int>("CUN");

                    b.Property<int>("INT");

                    b.Property<int>("PR");

                    b.Property<int>("WIL");

                    b.HasKey("Id");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("Holocron.Context.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Holocron.Context.GroupCharacter", b =>
                {
                    b.Property<int>("GroupId");

                    b.Property<int>("CharacterId");

                    b.HasKey("GroupId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("GroupCharacters");
                });

            modelBuilder.Entity("Holocron.Context.GroupInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GroupId");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupInventory");
                });

            modelBuilder.Entity("Holocron.Context.GroupShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupShip");
                });

            modelBuilder.Entity("Holocron.Context.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GroupId");

                    b.Property<string>("PermissionGroup");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Holocron.Context.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ASTRO");

                    b.Property<int>("ATHL");

                    b.Property<int>("BRAWL");

                    b.Property<int>("CHARM");

                    b.Property<int>("COERC");

                    b.Property<int>("COMP");

                    b.Property<int>("COOL");

                    b.Property<int>("COORD");

                    b.Property<int>("CORE");

                    b.Property<int>("CYBERNETICS");

                    b.Property<int>("DECEP");

                    b.Property<int>("DISC");

                    b.Property<int>("EDU");

                    b.Property<int>("GUNN");

                    b.Property<int>("LEAD");

                    b.Property<int>("LORE");

                    b.Property<int>("LTSABER");

                    b.Property<int>("MECH");

                    b.Property<int>("MED");

                    b.Property<int>("MELEE");

                    b.Property<int>("NEG");

                    b.Property<int>("OUT");

                    b.Property<int>("PERC");

                    b.Property<int>("PILOTPL");

                    b.Property<int>("PILOTSP");

                    b.Property<int>("RANGHVY");

                    b.Property<int>("RANGLT");

                    b.Property<int>("RESIL");

                    b.Property<int>("SKUL");

                    b.Property<int>("STEAL");

                    b.Property<int>("SURV");

                    b.Property<int>("SW");

                    b.Property<int>("UND");

                    b.Property<int>("VIGIL");

                    b.Property<int>("WARF");

                    b.Property<int>("XEN");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Holocron.Context.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("SessionToken");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Holocron.Context.Character", b =>
                {
                    b.HasOne("Holocron.Context.Characteristics", "CharacteristicsBuy")
                        .WithMany()
                        .HasForeignKey("CharacteristicsBuyId");

                    b.HasOne("Holocron.Context.Characteristics", "Characteristics")
                        .WithMany()
                        .HasForeignKey("CharacteristicsId");

                    b.HasOne("Holocron.Context.Skills", "SkillsBuy")
                        .WithMany()
                        .HasForeignKey("SkillsBuyId");

                    b.HasOne("Holocron.Context.User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Holocron.Context.CharacterInventory", b =>
                {
                    b.HasOne("Holocron.Context.Character")
                        .WithMany("Inventory")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("Holocron.Context.CharacterShip", b =>
                {
                    b.HasOne("Holocron.Context.Character")
                        .WithMany("Ships")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("Holocron.Context.GroupCharacter", b =>
                {
                    b.HasOne("Holocron.Context.Character", "Character")
                        .WithMany("GroupCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Holocron.Context.Group", "Group")
                        .WithMany("GroupCharacters")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Holocron.Context.GroupInventory", b =>
                {
                    b.HasOne("Holocron.Context.Group")
                        .WithMany("Inventory")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("Holocron.Context.GroupShip", b =>
                {
                    b.HasOne("Holocron.Context.Group")
                        .WithMany("Ships")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("Holocron.Context.Permission", b =>
                {
                    b.HasOne("Holocron.Context.Group", "Group")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupId");

                    b.HasOne("Holocron.Context.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
